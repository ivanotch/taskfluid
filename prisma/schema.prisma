generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  password    String
  tasks       Task[]       @relation("UserTasks") // A user can create multiple tasks
  sharedTasks SharedTask[] // A user can have tasks shared with them
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Task {
  id          String       @id @default(uuid())
  title       String
  description String?
  status      TaskStatus   @default(PENDING)
  priority    TaskPriority @default(MEDIUM)
  deadline    DateTime
  creatorId   String
  creator     User         @relation("UserTasks", fields: [creatorId], references: [id], onDelete: Cascade) // Ensures a user can create multiple tasks
  sharedUsers SharedTask[] // Tracks users that the task is shared with
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model SharedTask {
  id        String   @id @default(uuid())
  taskId    String
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade) // Ensures deletion when the task is deleted
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([taskId, userId]) // Ensures a task cannot be shared multiple times to the same user
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}
